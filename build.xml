<!-- Sample Ant build file for running IglooScore under JaCoCo -->
<!-- Jonathan Cook, 17 Sep 2015 -->
<project name="iglooscore" default="jacocoreport" xmlns:jacoco="antlib:org.jacoco.ant">

   <!-- property to allow ant to find jacoco: CHANGE THE PATH to point to yours -->
   <property name="jacocodir" location="/mnt/c/Users/Kurt/'Google Drive'/COLLEGE/NMSU/'FA 17'/'CS 371'/program3/jacoco-0.7.9/lib"/>

   <taskdef uri="antlib:org.jacoco.ant" resource="org/jacoco/ant/antlib.xml">
      <classpath path="${jacocodir}/jacocoant.jar"/>
   </taskdef>

   <!-- standard compile task, but turn debugging on for source viewing -->
   <target name="compile" description="compile the source">
      <javac srcdir="." includeantruntime="false" debug="true"/>
   </target>

   <!-- tests if new jacoco run is needed by checking if the jacoco.exec file is
        newer than the class files or this build file -->
   <target name="checkRun">
      <uptodate property="run.notneeded" targetfile="jacoco.exec">
         <srcfiles dir="." includes="*.class build.xml" />
      </uptodate>
   </target>

   <!-- run program under jacoco: this example has two runs, you'll need to perhaps
        modify them, and then add more; this only runs if needed -->
   <target name="jacocorun" depends="compile,checkRun" unless="run.notneeded">
      <delete>
         <!-- must delete coverage data file to start afresh (otherwise coverage accumulates) -->
         <fileset dir="." includes="jacoco.exec"/>
      </delete>
   	
   		<!-- IglooScore1-->
		<!-- ORGINAL TEST-->
      	<echo message="TEST IglooScore1: 8 9 6"/>
      	<java classname="IglooScore1" fork="true">
         	<arg value="8"/><arg value="9"/><arg value="6"/>
        	<jvmarg line="-javaagent:${jacocodir}/jacocoagent.jar"/>
      	</java>
		
   		<!-- This second test will test the branch of the first number being higher than the second. -->
		<!-- 2nd TEST-->
   		<echo message="TEST IglooScore1: 9 8 6"/>
   	    <java classname="IglooScore1" fork="true">
   	        <arg value="9"/><arg value="8"/><arg value="6"/>
   	    	<jvmarg line="-javaagent:${jacocodir}/jacocoagent.jar"/>
   	    </java>
		
   		<!-- This third test will test the try-catch for not having three numbers. -->
   		<!-- 3rd TEST-->
   		<echo message="TEST IglooScore1: 8 9"/>
   	    <java classname="IglooScore1" fork="true">
   	        <arg value="8"/><arg value="9"/>
   	    	<jvmarg line="-javaagent:${jacocodir}/jacocoagent.jar"/>
   	    </java>
   		
   		<!-- This fourth test will test the try-catch for not having only integers as input. -->
   		<!-- 4th TEST-->
   		<echo message="TEST IglooScore1: 8 9.5 6"/>
   	   	<java classname="IglooScore1" fork="true">
   	        <arg value="8"/><arg value="9.5"/><arg value="6"/>
   	    	<jvmarg line="-javaagent:${jacocodir}/jacocoagent.jar"/>
   	    </java>
   	
		<!-- IglooScore2-->
		<!-- ORIGINAL -->   	
      	<echo message="TEST IglooScore2: 8 9 6"/>
      	<java classname="IglooScore2" fork="true">
         	<arg value="8"/><arg value="9"/><arg value="6"/>
         	<jvmarg line="-javaagent:${jacocodir}/jacocoagent.jar"/>
      	</java>

   		<!-- This second test will test the branch where the first number is higher than the second
   		which is higher than the last. -->
		<!-- 2nd TEST-->
		<echo message="TEST IglooScore2: 9 8 6"/>
		<java classname="IglooScore2" fork="true">
			<arg value="9"/><arg value="8"/><arg value="6"/>
			<jvmarg line="-javaagent:${jacocodir}/jacocoagent.jar"/>
		</java>
   	
   		<!-- This third test will test the try-catch for not having three numbers passed as arguments. -->
		<!-- 3rd TEST-->
		<echo message="TEST IglooScore2: 8 9"/>
		<java classname="IglooScore2" fork="true">
			<arg value="8"/><arg value="9"/>
			<jvmarg line="-javaagent:${jacocodir}/jacocoagent.jar"/>
		</java>
		
   		<!-- This fourth test will test the try-catch for not having only integers as input. -->
   		<!-- 4th TEST-->
		<echo message="TEST IglooScore2: 8 9.5 6"/>
		<java classname="IglooScore2" fork="true">
			<arg value="8"/><arg value="9.5"/><arg value="6"/>
			<jvmarg line="-javaagent:${jacocodir}/jacocoagent.jar"/>
		</java>
   		
   	<!-- This fifth test will test a branch for one of the three numbers being over or under -1 and 50 respectively. -->
		<!-- 5th TEST-->
		<echo message="TEST IglooScore2: -1 10 10"/>
		<java classname="IglooScore2" fork="true">
			<arg value="-1"/><arg value="10"/><arg value="10"/>
			<jvmarg line="-javaagent:${jacocodir}/jacocoagent.jar"/>
		</java>
   		
		<!-- This 6th test will test the null path. -->
		<!-- 6th TEST-->
		<echo message="TEST IglooScore2: null"/>
		<java classname="IglooScore2" fork="true">
			<arg value=""/>
			<jvmarg line="-javaagent:${jacocodir}/jacocoagent.jar"/>
		</java>
   	
		<!-- This 7th test will test another ordering path. -->
   		<!-- 7th TEST-->
		<echo message="TEST IglooScore2: 1 5 10"/>
		<java classname="IglooScore2" fork="true">
			<arg value="1"/><arg value="5"/><arg value="10"/>
			<jvmarg line="-javaagent:${jacocodir}/jacocoagent.jar"/>
		</java>
   	
		<!-- This 8th test will test another ordering path. -->
   		<!-- 8th TEST-->
		<echo message="TEST IglooScore2: 9 5 10"/>
		<java classname="IglooScore2" fork="true">
			<arg value="9"/><arg value="5"/><arg value="10"/>
			<jvmarg line="-javaagent:${jacocodir}/jacocoagent.jar"/>
		</java>
   
		<!-- This 9th test will test the case where there are all same scores. -->
   		<!-- 9th TEST-->
   		<echo message="TEST IglooScore2: 9 9 9"/>
   		<java classname="IglooScore2" fork="true">
   			<arg value="9"/><arg value="9"/><arg value="9"/>
 			<jvmarg line="-javaagent:${jacocodir}/jacocoagent.jar"/>
 		</java>
	
   		<!-- This 10th test will test a branch for one of the three numbers being over or under -1 and 50 respectively. -->   	
   		<!-- 10th TEST-->
		<echo message="TEST IglooScore2: 52 10 10"/>
		<java classname="IglooScore2" fork="true">
			<arg value="52"/><arg value="10"/><arg value="10"/>
			<jvmarg line="-javaagent:${jacocodir}/jacocoagent.jar"/>
		</java>
	
   		<!-- This 11th test will test a branch for one of the three numbers being over or under -1 and 50 respectively. -->
   		<!-- 11th TEST-->
		<echo message="TEST IglooScore2: 10 -1 10"/>
		<java classname="IglooScore2" fork="true">
			<arg value="10"/><arg value="-1"/><arg value="10"/>
			<jvmarg line="-javaagent:${jacocodir}/jacocoagent.jar"/>
		</java>
	   	
   		<!-- This 12th test will test a branch for one of the three numbers being over or under -1 and 50 respectively. -->
		<!-- 12th TEST-->
		<echo message="TEST IglooScore2: 10 52 10"/>
		<java classname="IglooScore2" fork="true">
			<arg value="10"/><arg value="52"/><arg value="10"/>
			<jvmarg line="-javaagent:${jacocodir}/jacocoagent.jar"/>
		</java>
	   	
   		<!-- This 13th test will test a branch for one of the three numbers being over or under -1 and 50 respectively. -->
		<!-- 13th TEST-->
		<echo message="TEST IglooScore2: 10 10 -1"/>
		<java classname="IglooScore2" fork="true">
			<arg value="10"/><arg value="10"/><arg value="-1"/>
			<jvmarg line="-javaagent:${jacocodir}/jacocoagent.jar"/>
		</java>
	   	
   		<!-- This 14th test will test a branch for one of the three numbers being over or under -1 and 50 respectively. -->   	
		<!-- 14th TEST-->
		<echo message="TEST IglooScore2: 10 10 52"/>
		<java classname="IglooScore2" fork="true">
			<arg value="10"/><arg value="10"/><arg value="52"/>
			<jvmarg line="-javaagent:${jacocodir}/jacocoagent.jar"/>
		</java>
	</target>

   <!-- tests if new jacoco report needs generated by checking if top report file
        (index.html) is newer than the run data file (jacoco.exec) -->
   <target name="checkReport">
      <uptodate property="report.notneeded" targetfile="report/index.html" srcfile="jacoco.exec" />
   </target>

   <!-- generate a new jacoco report from a new data file; only runs if needed -->
   <target name="jacocoreport" depends="jacocorun,checkReport" unless="report.notneeded">
      <jacoco:report>
         <executiondata>
            <file file="jacoco.exec"/>
         </executiondata>
         <structure name="iglooscore">
            <classfiles>
               <fileset dir="."/>
            </classfiles>
            <sourcefiles encoding="UTF-8">
               <fileset dir="."/>
            </sourcefiles>
         </structure>
         <html destdir="report"/>
      </jacoco:report>
   </target>

   <!-- clean up by removing all generated files; do "ant clean" to start afresh -->
   <target name="clean">
      <delete>
         <fileset dir="." includes="*.class jacoco.exec"/>
      </delete>
      <delete dir="report" />
   </target>

</project>

